#include <stdio.h>
#define MAX 100

int graph[MAX][MAX];
int visited[MAX];
int stack[MAX];
int top = -1;
void dfs(int v, int n) {
    visited[v] = 1;

    for (int i = 0; i < n; i++) {
        if (graph[v][i] && !visited[i])
            dfs(i, n);
    }
    stack[++top] = v; // push to stack after visiting all adjacent
}
int main() {
    int n, e, u, v;
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter number of edges: ");
    scanf("%d", &e);

    for (int i = 0; i < e; i++) {
        printf("Enter edge %d (from to): ", i + 1);
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
    }
    for (int i = 0; i < n; i++)
        visited[i] = 0;

    for (int i = 0; i < n; i++) {
        if (!visited[i])
            dfs(i, n);
    }
    printf("Topological Sort Order:\n");
    while (top != -1)
        printf("%d ", stack[top--]);
    return 0;
}
